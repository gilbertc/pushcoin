-- JSON API for PushCoin --

Notes
=====

The API consits of a series of Message and Request definitions.

A Request consists of an Input Message and an Output Message. A Message data
is encoded according to JSON.

The Request Message has an associated URL where the request should be sent to. 
The vertical bars "|" in the Request's Output indicate that the result can be 
any of the enumerated message types, depending on the outcome of processing.

#---------------------------------------------------------------------------#
	Message: error

	Description:
		Generic error message carrying the error code and the error string 
		suitable for user display.

		List of error codes can be found in file 'error_codes.txt' distributed
		in the same package as this file.

	{
		msg: "error"
		errc: number
		reason: string
		ref: string, optional
		transaction_id: string, optional
	}


#---------------------------------------------------------------------------#
	Message: success

	Description:
		Generic success message, indicating last call finished OK.

	{
		msg: "success" 
		ref: string, optional
		transaction_id: string, optional
	}

#---------------------------------------------------------------------------#
	Message: challenge

	Description:
		Indicates that the server requires human-presence verification by the 
		client.
		Please follow instructions at 
		https://developers.google.com/recaptcha/docs/display
		for information on how to integrate the reCAPTCHA functionality in your 
		page.

	{
		captcha_key: string
	}
	
#---------------------------------------------------------------------------#
	Request: json/account/initiate-signup/

	Description:
		Begins the process of registration of a new user account.
		Note: If error message contains 'captcha_required' field, then the UI
		is expected to provide both captcha fields in subsequent attempts at
		signup.

	Input:
		{
			email: string
			captcha:
				{
					challenge: string	
					response: string
				}, optional
		}

	Output: success | error

#---------------------------------------------------------------------------#
	Request: json/user/account/complete-signup/

	Description:
		Completes registration of a user account and logs the user in
		(sets auth token).

	Input:
		{
			account_id: string
			first_name: string
			last_name: string
			password: string
			mobile_phone: string, optional
		}

	Output: success | error

#---------------------------------------------------------------------------#
	Request: json/merchant/account/complete-signup/

	Description:
		Completes registration of a merchant account and logs the user in
		(sets auth token).

	Input:
		{
			account_id: string
			password: string
			first_name: string
			last_name: string

			business_name: string
			phone: string
			# employer identification number or Federal TAX ID
			gov_id: string
			website: string, optional

			# business main office address (headquarters)
			street: string
			city: string
			state: string
			zip: string
		}

	Output: success | error

#---------------------------------------------------------------------------#
	Request: json/account/login/

	Description:
		Upon successful login the server returns auth token, stored in session 
		cookie.  On multiple failed attempts to login, server will require a
		CAPTCHA challenge.

	Input:
		{
			user: string
			password: string
			captcha:
				{
					challenge: string	
					response: string
				}, optional
		}

	Output: success | error | challenge

#---------------------------------------------------------------------------#
	Request: json/account/logout/

	Description:
		Logs off current user. Clears all session data.

	Input: <empty>
	Output: success

#---------------------------------------------------------------------------#
	Request: json/auto/imalive/

	Description:
		Checks if user session has expired. This call does not prevent
		the user session from expiring. Recommended interval is 2 minutes.

	Input: <empty>

	Output: success | error

#---------------------------------------------------------------------------#
	Request: json/account/check-password/

	Description:
		Verifies if provided password is sufficiently complex.

	Input:
		{
			password: string
		}

	Output: success | error

#---------------------------------------------------------------------------#
	Request: json/account/change-password/

	Description:
		Updates password associated with a given account. The front-end must
		validate the user has typed the new password correctly, for example 
		by asking to type it twice.

		The old_password has to match password currently on record.

	Input:
		{
			old_password: string
			new_password: string
		}

	Output: success | error

#---------------------------------------------------------------------------#
	Request: json/account/change-person-name/

	Description:
		Updates first or last name associated with a given account.

	Input:
		{
			first_name: string
			last_name: string
		}

	Output: success | error

#---------------------------------------------------------------------------#
	Request: json/merchant/account/show-info/

	Description:
		Returns business contact information.

	Input: <empty>

	Output: error |
		{
			msg: "merchant-account-show-info-reply"
			business_name: string
			phone: string
			# employer identification number or Federal TAX ID
			gov_id: string
			website: string, optional

			# business main office address (headquarters)
			street: string
			city: string
			state: string
			zip: string
		}

#---------------------------------------------------------------------------#
	Request: json/merchant/account/change-info/

	Description:
		Updates business contact information.

	Input:
		{
			business_name: string
			phone: string
			# employer identification number or Federal TAX ID
			gov_id: string
			website: string, optional

			# business main office address (headquarters)
			street: string
			city: string
			state: string
			zip: string
		}

	Output: success | error

#---------------------------------------------------------------------------#
	Request: json/account/balance/

	Description:
		Returns current account balance.

	Input: <empty>
	Output: error |
		{
			msg: "account-balance-reply"
			balance: number
		}

#---------------------------------------------------------------------------#
	Request: json/account/summary/

	Description:
		Returns summary account information.

	Input: <empty>

	Output: error | 
		{
			msg: "account-summary-reply"
			account_id: string
			email: string
			first_name: string
			last_name: string
			balance: number
			type: "user" | "merchant"
		}

#---------------------------------------------------------------------------#
	Request: json/account/validate-bank-routing-number/

	Description:
		Looks up a bank or credit union matching given routing number.

	Input:
		{
			routing_number: string
		}

	Output: error | 
		{
			msg: "validate-bank-routing-number-reply"
			bank_name: string
			routing_number: string
			address: string
			city: string
			state: string
			zip: string
			phone: string
		}

#---------------------------------------------------------------------------#
	Request: json/bookmark/recipient/add/

	Description:
		Adds or updates a recipient bookmark.

	Input:
		{
			email: string
			description: string, optional
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/bookmark/recipient/delete/

	Description:
		Removes a transfer-recipient bookmark.

	Input:
		{
			email: string
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/bookmark/recipient/list/

	Description:
		Lists recipient bookmarks.

	Input: <empty>

	Output: error |
		{
			msg: "bookmark-list-recipient-reply"
			items: array-of
				{
					email: string
					description: string, optional
				}
		}

#---------------------------------------------------------------------------#
	Request: json/bookmark/ach/add/

	Description:
		Adds or updates an ACH bookmark.

	Input:
		{
			routing_number: string
			bank_account_number: string

			# customer or business name registered under the bank account
			bank_account_name: string

			description: string
		}

	Output: error | success


#---------------------------------------------------------------------------#
	Request: json/bookmark/ach/hide/

	Description:
		Makes a given ACH bookmark inaccessible.

		Note: One cannot delete an existing ACH bookmark.

	Input:
		{
			# ACH bookmark identifier
			ach_def_id: string
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/bookmark/ach/list/

	Description:
		Lists all ACH bookmarks created under the account.

	Input: <empty>

	Output: error | 
		{
			msg: "bookmark-list-ash-reply"
			items: array-of:
				{
					# ACH bookmark identifier
					ach_def_id: string

					bank_bank_name: string
					bank_address: string
					bank_city: string
					bank_state: string
					bank_zip: string
					bank_phone: string
					routing_number: string
					bank_account_number: string
					bank_account_name: string	
					description: string
				}
		}

#---------------------------------------------------------------------------#
	Request: json/bookmark/address/add/

	Description:
		Adds a mailing address to an account.

	Input:
		{
			street: string
			city: string
			state: string
			zip: string
			phone: string, optional
			description: string, optional
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/bookmark/address/hide/

	Description:
		Makes a given address inaccesible.

		Note: One cannot delete an existing address.

	Input:
		{
			address_id: string
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/bookmark/address/list/

	Description:
		Lists all addresses created under the account.

	Input: <empty>

	Output: error | 
		{
			msg: "bookmark-list-address-reply"
			items: array-of:
				{
					address_id: string
					street: string
					city: string
					state: string
					zip: string
					phone: string, optional
					description: string, optional
				}
		}

#---------------------------------------------------------------------------#
	Request: json/device/add-smart/

	Description:
		Registers a smart deivce, such as a tablet or phone, with the account.
		
	Input:
		{
			description: string
		}

	Output: error | 
		{
			msg: "device-add-smart-reply"
			device_id: string
			registration_id: string
		}

#---------------------------------------------------------------------------#
	Request: json/device/reset-smart/

	Description:
		Clears MAT associated with a smart device.
		
	Input:
		{
			device_id: string
		}

	Output: error | 
		{
			msg: "device-reset-smart-reply"
			registration_id: string
		}

#---------------------------------------------------------------------------#
	Request: json/device/provision/

	Description:
		Provisions a new user deivce, such as an NFC Tag, preparing it for use
		in PushCoin. 
		
		Note: The 'provision' request requires "provisioning" privilege thus 
		is not available to regular users nor merchants. 

	Input:
		{
			# Serial number formatted as hexadecimal representation of 
			# its binary data
			serial_number: string
		}

	Output: error | 
		{
			msg: "device-provision-reply"
			device_id: string
			registration_id: string
		}

#---------------------------------------------------------------------------#
	Request: json/device/claim/

	Description:
		User cliams ownership of a (passive) device, such as a wristband.
		
	Input:
		{
			registration_id: string
			description: string

			# PIN is made of digits, can start with one or more zeros and
			# must be minimum of three digits
			passcode: digits
		}

	Output: error |
		{
			msg: "device-claim-reply"
			device_id: string
		}

#---------------------------------------------------------------------------#
	Request: json/device/list/

	Description:
		Returns list of devices belonging to a given account.

	Input: <empty>

	Output: error | 
		{
			msg: "device-list-reply"
			devices: array-of
				{
					device_id: string
					registered: date
					serial_number: string, optional
					status: string
					kind: "passive" | "smart"
					email: string, optional
					location_id: number, optional
					description: string, optional
					last_used: date, optional
					registration_id: string, optional
					claimed: date, optional
				}
		}

#---------------------------------------------------------------------------#
	Request: json/device/reset-pin/

	Description:
		Sets new or changes existing device PIN. Typically used with
		passive devices, such as wristbands.
		
	Input:
		{
			device_id: string

			# PIN is made of digits, can start with one or more zeros and
			# must be minimum of three digits
			passcode: digits
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/device/reset-description/

	Description:
		Sets new or changes existing device description.
		
	Input:
		{
			device_id: string
			description: string
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/device/delete/

	Description:
		Changes device status to 'deleted'.
		
	Input:
		{
			device_id: string
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/transaction/transfer/

	Description:
		Transfers specified amount from this account to the provided recipient.
		
	Input:
		{
			recipient: string (email address)
			amount: decimal
			currency: string
			note: string, optional
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/transaction/refund/

	Description:
		Refunds specified amount back to the originator.
		
	Input:
		{
			transaction_id: string
			amount: decimal
			note: string, optional
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/transaction/history/

	Description:
		Retrieves transaction history for the account.
		
	Input:
		{
			from_date: string (Y-m-d H:M:S), optional
			to_date: string (Y-m-d H:M:S), optional
			page_num: number (zero-based), optional
			page_size: number, optional

			# Returns only those transactions that meet given
			# specifier. If this parameter is entirely omitted, 
			# all transactions are returned.
			#
			# transaction context specifiers:
			#   W - withdrawal
			#   D - deposit
			#   P - payment
			#   T - transfer
			#   R - refund
			context: [ "W", "D", "P", "T", "R" ], optional

			# transaction status specifiers:
			#   Q - Queued
			#   P - Pending
			#   C - Completed
			#   F - Failed
			#   X - (User) Canceled
			status: [ "Q", "P", "C", "F", "X" ], optional
		}

	Output: error | 
		{
			msg: "transaction-history-reply"
			total_transactions: number
			items: array-of
				{
					currency: string
					device_id: string
					device_name: string
					buss_state: string
					invoice: string
					occurred: date
					buss_phone: phone
					trx_type: "debit" | "credit"
					amount: decimal
					tip: string
					tax: string
					note: string
					buss_email: string
					buss_zip: string
					buss_street: string
					buss_country: string
					counterparty_name: string
					counterparty_id: string
					trx_ctxt: "payment" | "transfer"
					buss_city: string
					recipient: string
					trx_id: string
					latitude: number
					longitude: number
					status: string
					clerk_note: string
			}

#---------------------------------------------------------------------------#
	Request: json/transaction/update-status-note/

	Description:
		Updates status and note for a given transaction.

	Input:
		{
			transaction_id: string
			status: string
			note: string, optional
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/transaction/deposit/

	Description:
		Initiates a deposit of funds.

	Input:
		{
			amount: decimal
			currency: string # "USD"
			account_id: string
			note: string, optional
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/transaction/withdrawal-check/

	Description:
		Requests withdrawal of funds via check method.
		
	Input:
		{
			amount: decimal
			currency: string # "USD"

			# address where check needs to be mailed
			address_id: string

			note: string, optional
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/transaction/withdrawal-ach/

	Description:
		Requests withdrawal of funds via ach method.
		
	Input:
		{
			amount: decimal
			currency: string # "USD"

			# ACH bookmark identifier
			ach_def_id: string

			note: string, optional
		}

	Output: error | success

#---------------------------------------------------------------------------#
	Request: json/notification/list/

	Description:
		Retrieves pending notifications.
		
	Input:
		{
			page_num: number (zero-based), optional
			page_size: number, optional
			# show notifications newer than this one
			last_id: number, optional
		}

	Output: error |
		{
			msg: "notification-list-reply"
			items: array-of:
				{
					notification_id: number
					created: date

					# type of user acknowledgment to accompany 
					# this message:
					#   A - "I Read & Agree" button
					#   D - "Dismiss" button
					#   N - None required, just show the message
					ack_type: "A" | "D" | "N"

					# notification subject
					subject: string

					# notification text
					body: string

					# mime-type, ie 'plain/text' or 'plain/html'
					mime: string

					# degree of message seriousness
					#  - Critical
					#  - High
					#  - Normal
					severity: string
				}
		}

#---------------------------------------------------------------------------#
	Request: json/notification/acknowledge/

	Description:
		If notification requires an acknowledgement, this 
		message delivers it.
		
	Input:
		{
			notification_id: number
		}
	Output: error | success
